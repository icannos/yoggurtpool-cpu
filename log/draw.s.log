
 PASS 1
processing 
-1
[]
processing 
-1
[]
processing jump drawend
-1
['jump', 'drawend']
... @0 0000000000000000  :  1010100000000000000000
                          1010 10 0000000000000000   size=22
processing draw:
-1
['draw:']
processing   push 64 r0
-1
['push', '64', 'r0']
... @22 0000000000010110  :  1110000111000
                          1110000 111 000    size=13
processing   push 64 r1
-1
['push', '64', 'r1']
... @35 0000000000100011  :  1110000111001
                          1110000 111 001    size=13
processing   push 64 r2
-1
['push', '64', 'r2']
... @48 0000000000110000  :  1110000111010
                          1110000 111 010    size=13
processing   push 64 r3
-1
['push', '64', 'r3']
... @61 0000000000111101  :  1110000111011
                          1110000 111 011    size=13
processing   push 64 r4
-1
['push', '64', 'r4']
... @74 0000000001001010  :  1110000111100
                          1110000 111 100    size=13
processing 
-1
[]
processing ;mettons les points dans le bon sens
0
hey
[]
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @87 0000000001010111  :  0100001011
                          0100 001 011    size=10
processing jumpif lt echange
-1
['jumpif', 'lt', 'echange']
... @97 0000000001100001  :  1011110100000000000000000
                          1011 110 10 0000000000000000   size=25
processing   let r5 r1
-1
['let', 'r5', 'r1']
... @122 0000000001111010  :  0110101001
                          0110 101 001    size=10
processing   let r1 r3
-1
['let', 'r1', 'r3']
... @132 0000000010000100  :  0110001011
                          0110 001 011    size=10
processing   let r3 r5
-1
['let', 'r3', 'r5']
... @142 0000000010001110  :  0110011101
                          0110 011 101    size=10
processing   let r5 r2
-1
['let', 'r5', 'r2']
... @152 0000000010011000  :  0110101010
                          0110 101 010    size=10
processing   let r2 r4
-1
['let', 'r2', 'r4']
... @162 0000000010100010  :  0110010100
                          0110 010 100    size=10
processing   let r4 r5
-1
['let', 'r4', 'r5']
... @172 0000000010101100  :  0110100101
                          0110 100 101    size=10
processing echange:
-1
['echange:']
processing 
-1
[]
processing ;ceci prepare le premier point
0
hey
[]
processing sub3 r5 r3 r1
-1
['sub3', 'r5', 'r3', 'r1']
... @182 0000000010110110  :  1110100101011001
                          1110100 101 011 001    size=16
processing shift left r5 1 ;r5 contient dx
16
hey
['shift', 'left', 'r5', '1']
... @198 0000000011000110  :  100001011
                          1000 0 101 1   size=9
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @207 0000000011001111  :  1110100110100010
                          1110100 110 100 010    size=16
processing shift left r6 1 ;r6 contient dy
16
hey
['shift', 'left', 'r6', '1']
... @223 0000000011011111  :  100001101
                          1000 0 110 1   size=9
processing 
-1
[]
processing push 64 r7
-1
['push', '64', 'r7']
... @232 0000000011101000  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @245 0000000011110101  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @269 0000000100001101  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @282 0000000100011010  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @295 0000000100100111  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @308 0000000100110100  :  1001101111001
                          10011 01 111 001    size=13
processing 
-1
[]
processing 
-1
[]
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @321 0000000101000001  :  010111000
                          0101 110 0 0   size=9
processing jumpif slt negatif
-1
['jumpif', 'slt', 'negatif']
... @330 0000000101001010  :  1011011100000000000000000
                          1011 011 10 0000000000000000   size=25
processing cmp r5 r6
-1
['cmp', 'r5', 'r6']
... @355 0000000101100011  :  0100101110
                          0100 101 110    size=10
processing jumpif slt grandepente
-1
['jumpif', 'slt', 'grandepente']
... @365 0000000101101101  :  1011011100000000000000000
                          1011 011 10 0000000000000000   size=25
processing 
-1
[]
processing 
-1
[]
processing ;on met les donnees dans les bons registres pour ce cas
0
hey
[]
processing let r4 r6
-1
['let', 'r4', 'r6']
... @390 0000000110000110  :  0110100110
                          0110 100 110    size=10
processing sub3 r6 r3 r1
-1
['sub3', 'r6', 'r3', 'r1']
... @400 0000000110010000  :  1110100110011001
                          1110100 110 011 001    size=16
processing 
-1
[]
processing boucle:
-1
['boucle:']
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @416 0000000110100000  :  0100001011
                          0100 001 011    size=10
processing jumpif ge fin
-1
['jumpif', 'ge', 'fin']
... @426 0000000110101010  :  1011101100000000000000000
                          1011 101 10 0000000000000000   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @451 0000000111000011  :  000100101
                          0001 001 0 1   size=9
processing sub2 r6 r4
-1
['sub2', 'r6', 'r4']
... @460 0000000111001100  :  0010110100
                          0010 110 100    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @470 0000000111010110  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixel
-1
['jumpif', 'sgt', 'chgmtpixel']
... @479 0000000111011111  :  1011010100000000000000000
                          1011 010 10 0000000000000000   size=25
processing add2i r2 1
-1
['add2i', 'r2', '1']
... @504 0000000111111000  :  000101001
                          0001 010 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @513 0000001000000001  :  0000110101
                          0000 110 101    size=10
processing chgmtpixel:
-1
['chgmtpixel:']
processing push 64 r1
-1
['push', '64', 'r1']
... @523 0000001000001011  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @536 0000001000011000  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @549 0000001000100101  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @562 0000001000110010  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @575 0000001000111111  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @599 0000001001010111  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @612 0000001001100100  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @625 0000001001110001  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @638 0000001001111110  :  1001101111001
                          10011 01 111 001    size=13
processing jump boucle
-1
['jump', 'boucle']
... @651 0000001010001011  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing fin:
-1
['fin:']
processing return
-1
['return']
... @673 0000001010100001  :  1110001
                          1110001    size=7
processing drawend:
-1
['drawend:']
processing 
-1
[]
processing grandepente:
-1
['grandepente:']
processing ;mettons les bons registres
0
hey
[]
processing let r3 r5
-1
['let', 'r3', 'r5']
... @680 0000001010101000  :  0110011101
                          0110 011 101    size=10
processing let r5 r6
-1
['let', 'r5', 'r6']
... @690 0000001010110010  :  0110101110
                          0110 101 110    size=10
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @700 0000001010111100  :  1110100110100010
                          1110100 110 100 010    size=16
processing 
-1
[]
processing 
-1
[]
processing bouclebis:
-1
['bouclebis:']
processing cmp r2 r4
-1
['cmp', 'r2', 'r4']
... @716 0000001011001100  :  0100010100
                          0100 010 100    size=10
processing jumpif ge finbis
-1
['jumpif', 'ge', 'finbis']
... @726 0000001011010110  :  1011101100000000000000000
                          1011 101 10 0000000000000000   size=25
processing add2i r2 1
-1
['add2i', 'r2', '1']
... @751 0000001011101111  :  000101001
                          0001 010 0 1   size=9
processing sub2 r6 r3
-1
['sub2', 'r6', 'r3']
... @760 0000001011111000  :  0010110011
                          0010 110 011    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @770 0000001100000010  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixelbis
-1
['jumpif', 'sgt', 'chgmtpixelbis']
... @779 0000001100001011  :  1011010100000000000000000
                          1011 010 10 0000000000000000   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @804 0000001100100100  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @813 0000001100101101  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelbis:
-1
['chgmtpixelbis:']
processing push 64 r1
-1
['push', '64', 'r1']
... @823 0000001100110111  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @836 0000001101000100  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @849 0000001101010001  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @862 0000001101011110  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @875 0000001101101011  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @899 0000001110000011  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @912 0000001110010000  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @925 0000001110011101  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @938 0000001110101010  :  1001101111001
                          10011 01 111 001    size=13
processing jump bouclebis
-1
['jump', 'bouclebis']
... @951 0000001110110111  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finbis:
-1
['finbis:']
processing 
-1
[]
processing pop 64 r4
-1
['pop', '64', 'r4']
... @973 0000001111001101  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @986 0000001111011010  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @999 0000001111100111  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1012 0000001111110100  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1025 0000010000000001  :  1001101111000
                          10011 01 111 000    size=13
processing return
-1
['return']
... @1038 0000010000001110  :  1110001
                          1110001    size=7
processing 
-1
[]
processing 
-1
[]
processing negatif:
-1
['negatif:']
processing push 64 r0
-1
['push', '64', 'r0']
... @1045 0000010000010101  :  1110000111000
                          1110000 111 000    size=13
processing leti r0 0
-1
['leti', 'r0', '0']
... @1058 0000010000100010  :  011100000
                          0111 000 0 0   size=9
processing sub2 r0 r6
-1
['sub2', 'r0', 'r6']
... @1067 0000010000101011  :  0010000110
                          0010 000 110    size=10
processing cmp r5 r0
-1
['cmp', 'r5', 'r0']
... @1077 0000010000110101  :  0100101000
                          0100 101 000    size=10
processing jumpif slt grandepentebis
-1
['jumpif', 'slt', 'grandepentebis']
... @1087 0000010000111111  :  1011011100000000000000000
                          1011 011 10 0000000000000000   size=25
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1112 0000010001011000  :  1001101111000
                          10011 01 111 000    size=13
processing ;dans le huitieme octant
0
hey
[]
processing let r4 r6
-1
['let', 'r4', 'r6']
... @1125 0000010001100101  :  0110100110
                          0110 100 110    size=10
processing sub3 r6 r3 r1
-1
['sub3', 'r6', 'r3', 'r1']
... @1135 0000010001101111  :  1110100110011001
                          1110100 110 011 001    size=16
processing 
-1
[]
processing boucleter:
-1
['boucleter:']
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @1151 0000010001111111  :  0100001011
                          0100 001 011    size=10
processing jumpif ge finter
-1
['jumpif', 'ge', 'finter']
... @1161 0000010010001001  :  1011101100000000000000000
                          1011 101 10 0000000000000000   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @1186 0000010010100010  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r4
-1
['add2', 'r6', 'r4']
... @1195 0000010010101011  :  0000110100
                          0000 110 100    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @1205 0000010010110101  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixelter
-1
['jumpif', 'sgt', 'chgmtpixelter']
... @1214 0000010010111110  :  1011010100000000000000000
                          1011 010 10 0000000000000000   size=25
processing sub2i r2 1
-1
['sub2i', 'r2', '1']
... @1239 0000010011010111  :  001101001
                          0011 010 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @1248 0000010011100000  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelter:
-1
['chgmtpixelter:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1258 0000010011101010  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1271 0000010011110111  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1284 0000010100000100  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1297 0000010100010001  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1310 0000010100011110  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1334 0000010100110110  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1347 0000010101000011  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1360 0000010101010000  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1373 0000010101011101  :  1001101111001
                          10011 01 111 001    size=13
processing jump boucleter
-1
['jump', 'boucleter']
... @1386 0000010101101010  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finter:
-1
['finter:']
processing pop 64 r4
-1
['pop', '64', 'r4']
... @1408 0000010110000000  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1421 0000010110001101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1434 0000010110011010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1447 0000010110100111  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1460 0000010110110100  :  1001101111000
                          10011 01 111 000    size=13
processing return
-1
['return']
... @1473 0000010111000001  :  1110001
                          1110001    size=7
processing 
-1
[]
processing 
-1
[]
processing 
-1
[]
processing grandepentebis:
-1
['grandepentebis:']
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1480 0000010111001000  :  1001101111000
                          10011 01 111 000    size=13
processing ;dans le septieme octant
0
hey
[]
processing let r3 r5
-1
['let', 'r3', 'r5']
... @1493 0000010111010101  :  0110011101
                          0110 011 101    size=10
processing let r5 r6
-1
['let', 'r5', 'r6']
... @1503 0000010111011111  :  0110101110
                          0110 101 110    size=10
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @1513 0000010111101001  :  1110100110100010
                          1110100 110 100 010    size=16
processing bouclequater:
-1
['bouclequater:']
processing cmp r4 r2
-1
['cmp', 'r4', 'r2']
... @1529 0000010111111001  :  0100100010
                          0100 100 010    size=10
processing jumpif ge finquater
-1
['jumpif', 'ge', 'finquater']
... @1539 0000011000000011  :  1011101100000000000000000
                          1011 101 10 0000000000000000   size=25
processing sub2i r2 1
-1
['sub2i', 'r2', '1']
... @1564 0000011000011100  :  001101001
                          0011 010 0 1   size=9
processing add2 r6 r3
-1
['add2', 'r6', 'r3']
... @1573 0000011000100101  :  0000110011
                          0000 110 011    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @1583 0000011000101111  :  010111000
                          0101 110 0 0   size=9
processing jumpif slt chgmtpixelquater
-1
['jumpif', 'slt', 'chgmtpixelquater']
... @1592 0000011000111000  :  1011011100000000000000000
                          1011 011 10 0000000000000000   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @1617 0000011001010001  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @1626 0000011001011010  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelquater:
-1
['chgmtpixelquater:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1636 0000011001100100  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1649 0000011001110001  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1662 0000011001111110  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1675 0000011010001011  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1688 0000011010011000  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1712 0000011010110000  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1725 0000011010111101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1738 0000011011001010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1751 0000011011010111  :  1001101111001
                          10011 01 111 001    size=13
processing jump bouclequater
-1
['jump', 'bouclequater']
... @1764 0000011011100100  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finquater:
-1
['finquater:']
processing pop 64 r4
-1
['pop', '64', 'r4']
... @1786 0000011011111010  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1799 0000011100000111  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1812 0000011100010100  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1825 0000011100100001  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1838 0000011100101110  :  1001101111000
                          10011 01 111 000    size=13
processing return
-1
['return']
... @1851 0000011100111011  :  1110001
                          1110001    size=7
processing 
-1
[]
processing jump plotend
-1
['jump', 'plotend']
... @1858 0000011101000010  :  1010100000000000000000
                          1010 10 0000000000000000   size=22
processing plot:
-1
['plot:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1880 0000011101011000  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1893 0000011101100101  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1906 0000011101110010  :  1110000111011
                          1110000 111 011    size=13
processing leti r3 1073350080
-1
['leti', 'r3', '1073350080']
... @1919 0000011101111111  :  011101111000111111111110100000010111000000
                          0111 011 110 00111111111110100000010111000000   size=42
processing sub2i r2 127
-1
['sub2i', 'r2', '127']
... @1961 0000011110101001  :  00110101001111111
                          0011 010 10 01111111   size=17
processing shift left r2 9
-1
['shift', 'left', 'r2', '9']
... @1978 0000011110111010  :  100000100001001
                          1000 0 010 0001001   size=15
processing sub2 r3 r2
-1
['sub2', 'r3', 'r2']
... @1993 0000011111001001  :  0010011010
                          0010 011 010    size=10
processing shift left r2 2
-1
['shift', 'left', 'r2', '2']
... @2003 0000011111010011  :  100000100000010
                          1000 0 010 0000010   size=15
processing sub2 r3 r2
-1
['sub2', 'r3', 'r2']
... @2018 0000011111100010  :  0010011010
                          0010 011 010    size=10
processing shift left r1 4
-1
['shift', 'left', 'r1', '4']
... @2028 0000011111101100  :  100000010000100
                          1000 0 001 0000100   size=15
processing add2 r3 r1
-1
['add2', 'r3', 'r1']
... @2043 0000011111111011  :  0000011001
                          0000 011 001    size=10
processing setctr a0 r3
-1
['setctr', 'a0', 'r3']
... @2053 0000100000000101  :  11011010011
                          110110 10 011    size=11
processing write a0 16 r0
-1
['write', 'a0', '16', 'r0']
... @2064 0000100000010000  :  11010010101000
                          110100 10 101 000    size=14
processing return
-1
['return']
... @2078 0000100000011110  :  1110001
                          1110001    size=7
processing pop 64 r3
-1
['pop', '64', 'r3']
... @2085 0000100000100101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @2098 0000100000110010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @2111 0000100000111111  :  1001101111001
                          10011 01 111 001    size=13
processing plotend:
-1
['plotend:']

 PASS 2
processing 
-1
[]
processing 
-1
[]
processing jump drawend
-1
['jump', 'drawend']
... @0 0000000000000000  :  1010100000001010010010
                          1010 10 0000001010010010   size=22
processing draw:
-1
['draw:']
processing   push 64 r0
-1
['push', '64', 'r0']
... @22 0000000000010110  :  1110000111000
                          1110000 111 000    size=13
processing   push 64 r1
-1
['push', '64', 'r1']
... @35 0000000000100011  :  1110000111001
                          1110000 111 001    size=13
processing   push 64 r2
-1
['push', '64', 'r2']
... @48 0000000000110000  :  1110000111010
                          1110000 111 010    size=13
processing   push 64 r3
-1
['push', '64', 'r3']
... @61 0000000000111101  :  1110000111011
                          1110000 111 011    size=13
processing   push 64 r4
-1
['push', '64', 'r4']
... @74 0000000001001010  :  1110000111100
                          1110000 111 100    size=13
processing 
-1
[]
processing ;mettons les points dans le bon sens
0
hey
[]
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @87 0000000001010111  :  0100001011
                          0100 001 011    size=10
processing jumpif lt echange
-1
['jumpif', 'lt', 'echange']
... @97 0000000001100001  :  1011110100000000000111100
                          1011 110 10 0000000000111100   size=25
processing   let r5 r1
-1
['let', 'r5', 'r1']
... @122 0000000001111010  :  0110101001
                          0110 101 001    size=10
processing   let r1 r3
-1
['let', 'r1', 'r3']
... @132 0000000010000100  :  0110001011
                          0110 001 011    size=10
processing   let r3 r5
-1
['let', 'r3', 'r5']
... @142 0000000010001110  :  0110011101
                          0110 011 101    size=10
processing   let r5 r2
-1
['let', 'r5', 'r2']
... @152 0000000010011000  :  0110101010
                          0110 101 010    size=10
processing   let r2 r4
-1
['let', 'r2', 'r4']
... @162 0000000010100010  :  0110010100
                          0110 010 100    size=10
processing   let r4 r5
-1
['let', 'r4', 'r5']
... @172 0000000010101100  :  0110100101
                          0110 100 101    size=10
processing echange:
-1
['echange:']
processing 
-1
[]
processing ;ceci prepare le premier point
0
hey
[]
processing sub3 r5 r3 r1
-1
['sub3', 'r5', 'r3', 'r1']
... @182 0000000010110110  :  1110100101011001
                          1110100 101 011 001    size=16
processing shift left r5 1 ;r5 contient dx
16
hey
['shift', 'left', 'r5', '1']
... @198 0000000011000110  :  100001011
                          1000 0 101 1   size=9
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @207 0000000011001111  :  1110100110100010
                          1110100 110 100 010    size=16
processing shift left r6 1 ;r6 contient dy
16
hey
['shift', 'left', 'r6', '1']
... @223 0000000011011111  :  100001101
                          1000 0 110 1   size=9
processing 
-1
[]
processing push 64 r7
-1
['push', '64', 'r7']
... @232 0000000011101000  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @245 0000000011110101  :  110101100000011101011000
                          110101 10 0000011101011000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @269 0000000100001101  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @282 0000000100011010  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @295 0000000100100111  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @308 0000000100110100  :  1001101111001
                          10011 01 111 001    size=13
processing 
-1
[]
processing 
-1
[]
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @321 0000000101000001  :  010111000
                          0101 110 0 0   size=9
processing jumpif slt negatif
-1
['jumpif', 'slt', 'negatif']
... @330 0000000101001010  :  1011011100000001010110010
                          1011 011 10 0000001010110010   size=25
processing cmp r5 r6
-1
['cmp', 'r5', 'r6']
... @355 0000000101100011  :  0100101110
                          0100 101 110    size=10
processing jumpif slt grandepente
-1
['jumpif', 'slt', 'grandepente']
... @365 0000000101101101  :  1011011100000000100100010
                          1011 011 10 0000000100100010   size=25
processing 
-1
[]
processing 
-1
[]
processing ;on met les donnees dans les bons registres pour ce cas
0
hey
[]
processing let r4 r6
-1
['let', 'r4', 'r6']
... @390 0000000110000110  :  0110100110
                          0110 100 110    size=10
processing sub3 r6 r3 r1
-1
['sub3', 'r6', 'r3', 'r1']
... @400 0000000110010000  :  1110100110011001
                          1110100 110 011 001    size=16
processing 
-1
[]
processing boucle:
-1
['boucle:']
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @416 0000000110100000  :  0100001011
                          0100 001 011    size=10
processing jumpif ge fin
-1
['jumpif', 'ge', 'fin']
... @426 0000000110101010  :  1011101100000000011011110
                          1011 101 10 0000000011011110   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @451 0000000111000011  :  000100101
                          0001 001 0 1   size=9
processing sub2 r6 r4
-1
['sub2', 'r6', 'r4']
... @460 0000000111001100  :  0010110100
                          0010 110 100    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @470 0000000111010110  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixel
-1
['jumpif', 'sgt', 'chgmtpixel']
... @479 0000000111011111  :  1011010100000000000010011
                          1011 010 10 0000000000010011   size=25
processing add2i r2 1
-1
['add2i', 'r2', '1']
... @504 0000000111111000  :  000101001
                          0001 010 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @513 0000001000000001  :  0000110101
                          0000 110 101    size=10
processing chgmtpixel:
-1
['chgmtpixel:']
processing push 64 r1
-1
['push', '64', 'r1']
... @523 0000001000001011  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @536 0000001000011000  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @549 0000001000100101  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @562 0000001000110010  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @575 0000001000111111  :  110101100000011101011000
                          110101 10 0000011101011000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @599 0000001001010111  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @612 0000001001100100  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @625 0000001001110001  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @638 0000001001111110  :  1001101111001
                          10011 01 111 001    size=13
processing jump boucle
-1
['jump', 'boucle']
... @651 0000001010001011  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing fin:
-1
['fin:']
processing return
-1
['return']
... @673 0000001010100001  :  1110001
                          1110001    size=7
processing drawend:
-1
['drawend:']
processing 
-1
[]
processing grandepente:
-1
['grandepente:']
processing ;mettons les bons registres
0
hey
[]
processing let r3 r5
-1
['let', 'r3', 'r5']
... @680 0000001010101000  :  0110011101
                          0110 011 101    size=10
processing let r5 r6
-1
['let', 'r5', 'r6']
... @690 0000001010110010  :  0110101110
                          0110 101 110    size=10
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @700 0000001010111100  :  1110100110100010
                          1110100 110 100 010    size=16
processing 
-1
[]
processing 
-1
[]
processing bouclebis:
-1
['bouclebis:']
processing cmp r2 r4
-1
['cmp', 'r2', 'r4']
... @716 0000001011001100  :  0100010100
                          0100 010 100    size=10
processing jumpif ge finbis
-1
['jumpif', 'ge', 'finbis']
... @726 0000001011010110  :  1011101100000000011011110
                          1011 101 10 0000000011011110   size=25
processing add2i r2 1
-1
['add2i', 'r2', '1']
... @751 0000001011101111  :  000101001
                          0001 010 0 1   size=9
processing sub2 r6 r3
-1
['sub2', 'r6', 'r3']
... @760 0000001011111000  :  0010110011
                          0010 110 011    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @770 0000001100000010  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixelbis
-1
['jumpif', 'sgt', 'chgmtpixelbis']
... @779 0000001100001011  :  1011010100000000000010011
                          1011 010 10 0000000000010011   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @804 0000001100100100  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @813 0000001100101101  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelbis:
-1
['chgmtpixelbis:']
processing push 64 r1
-1
['push', '64', 'r1']
... @823 0000001100110111  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @836 0000001101000100  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @849 0000001101010001  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @862 0000001101011110  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @875 0000001101101011  :  110101100000011101011000
                          110101 10 0000011101011000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @899 0000001110000011  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @912 0000001110010000  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @925 0000001110011101  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @938 0000001110101010  :  1001101111001
                          10011 01 111 001    size=13
processing jump bouclebis
-1
['jump', 'bouclebis']
... @951 0000001110110111  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finbis:
-1
['finbis:']
processing 
-1
[]
processing pop 64 r4
-1
['pop', '64', 'r4']
... @973 0000001111001101  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @986 0000001111011010  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @999 0000001111100111  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1012 0000001111110100  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1025 0000010000000001  :  1001101111000
                          10011 01 111 000    size=13
processing return
-1
['return']
... @1038 0000010000001110  :  1110001
                          1110001    size=7
processing 
-1
[]
processing 
-1
[]
processing negatif:
-1
['negatif:']
processing push 64 r0
-1
['push', '64', 'r0']
... @1045 0000010000010101  :  1110000111000
                          1110000 111 000    size=13
processing leti r0 0
-1
['leti', 'r0', '0']
... @1058 0000010000100010  :  011100000
                          0111 000 0 0   size=9
processing sub2 r0 r6
-1
['sub2', 'r0', 'r6']
... @1067 0000010000101011  :  0010000110
                          0010 000 110    size=10
processing cmp r5 r0
-1
['cmp', 'r5', 'r0']
... @1077 0000010000110101  :  0100101000
                          0100 101 000    size=10
processing jumpif slt grandepentebis
-1
['jumpif', 'slt', 'grandepentebis']
... @1087 0000010000111111  :  1011011100000000101110000
                          1011 011 10 0000000101110000   size=25
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1112 0000010001011000  :  1001101111000
                          10011 01 111 000    size=13
processing ;dans le huitieme octant
0
hey
[]
processing let r4 r6
-1
['let', 'r4', 'r6']
... @1125 0000010001100101  :  0110100110
                          0110 100 110    size=10
processing sub3 r6 r3 r1
-1
['sub3', 'r6', 'r3', 'r1']
... @1135 0000010001101111  :  1110100110011001
                          1110100 110 011 001    size=16
processing 
-1
[]
processing boucleter:
-1
['boucleter:']
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @1151 0000010001111111  :  0100001011
                          0100 001 011    size=10
processing jumpif ge finter
-1
['jumpif', 'ge', 'finter']
... @1161 0000010010001001  :  1011101100000000011011110
                          1011 101 10 0000000011011110   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @1186 0000010010100010  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r4
-1
['add2', 'r6', 'r4']
... @1195 0000010010101011  :  0000110100
                          0000 110 100    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @1205 0000010010110101  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixelter
-1
['jumpif', 'sgt', 'chgmtpixelter']
... @1214 0000010010111110  :  1011010100000000000010011
                          1011 010 10 0000000000010011   size=25
processing sub2i r2 1
-1
['sub2i', 'r2', '1']
... @1239 0000010011010111  :  001101001
                          0011 010 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @1248 0000010011100000  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelter:
-1
['chgmtpixelter:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1258 0000010011101010  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1271 0000010011110111  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1284 0000010100000100  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1297 0000010100010001  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1310 0000010100011110  :  110101100000011101011000
                          110101 10 0000011101011000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1334 0000010100110110  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1347 0000010101000011  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1360 0000010101010000  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1373 0000010101011101  :  1001101111001
                          10011 01 111 001    size=13
processing jump boucleter
-1
['jump', 'boucleter']
... @1386 0000010101101010  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finter:
-1
['finter:']
processing pop 64 r4
-1
['pop', '64', 'r4']
... @1408 0000010110000000  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1421 0000010110001101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1434 0000010110011010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1447 0000010110100111  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1460 0000010110110100  :  1001101111000
                          10011 01 111 000    size=13
processing return
-1
['return']
... @1473 0000010111000001  :  1110001
                          1110001    size=7
processing 
-1
[]
processing 
-1
[]
processing 
-1
[]
processing grandepentebis:
-1
['grandepentebis:']
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1480 0000010111001000  :  1001101111000
                          10011 01 111 000    size=13
processing ;dans le septieme octant
0
hey
[]
processing let r3 r5
-1
['let', 'r3', 'r5']
... @1493 0000010111010101  :  0110011101
                          0110 011 101    size=10
processing let r5 r6
-1
['let', 'r5', 'r6']
... @1503 0000010111011111  :  0110101110
                          0110 101 110    size=10
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @1513 0000010111101001  :  1110100110100010
                          1110100 110 100 010    size=16
processing bouclequater:
-1
['bouclequater:']
processing cmp r4 r2
-1
['cmp', 'r4', 'r2']
... @1529 0000010111111001  :  0100100010
                          0100 100 010    size=10
processing jumpif ge finquater
-1
['jumpif', 'ge', 'finquater']
... @1539 0000011000000011  :  1011101100000000011011110
                          1011 101 10 0000000011011110   size=25
processing sub2i r2 1
-1
['sub2i', 'r2', '1']
... @1564 0000011000011100  :  001101001
                          0011 010 0 1   size=9
processing add2 r6 r3
-1
['add2', 'r6', 'r3']
... @1573 0000011000100101  :  0000110011
                          0000 110 011    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @1583 0000011000101111  :  010111000
                          0101 110 0 0   size=9
processing jumpif slt chgmtpixelquater
-1
['jumpif', 'slt', 'chgmtpixelquater']
... @1592 0000011000111000  :  1011011100000000000010011
                          1011 011 10 0000000000010011   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @1617 0000011001010001  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @1626 0000011001011010  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelquater:
-1
['chgmtpixelquater:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1636 0000011001100100  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1649 0000011001110001  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1662 0000011001111110  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1675 0000011010001011  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1688 0000011010011000  :  110101100000011101011000
                          110101 10 0000011101011000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1712 0000011010110000  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1725 0000011010111101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1738 0000011011001010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1751 0000011011010111  :  1001101111001
                          10011 01 111 001    size=13
processing jump bouclequater
-1
['jump', 'bouclequater']
... @1764 0000011011100100  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finquater:
-1
['finquater:']
processing pop 64 r4
-1
['pop', '64', 'r4']
... @1786 0000011011111010  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1799 0000011100000111  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1812 0000011100010100  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1825 0000011100100001  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1838 0000011100101110  :  1001101111000
                          10011 01 111 000    size=13
processing return
-1
['return']
... @1851 0000011100111011  :  1110001
                          1110001    size=7
processing 
-1
[]
processing jump plotend
-1
['jump', 'plotend']
... @1858 0000011101000010  :  1010100000000011110100
                          1010 10 0000000011110100   size=22
processing plot:
-1
['plot:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1880 0000011101011000  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1893 0000011101100101  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1906 0000011101110010  :  1110000111011
                          1110000 111 011    size=13
processing leti r3 1073350080
-1
['leti', 'r3', '1073350080']
... @1919 0000011101111111  :  011101111000111111111110100000010111000000
                          0111 011 110 00111111111110100000010111000000   size=42
processing sub2i r2 127
-1
['sub2i', 'r2', '127']
... @1961 0000011110101001  :  00110101001111111
                          0011 010 10 01111111   size=17
processing shift left r2 9
-1
['shift', 'left', 'r2', '9']
... @1978 0000011110111010  :  100000100001001
                          1000 0 010 0001001   size=15
processing sub2 r3 r2
-1
['sub2', 'r3', 'r2']
... @1993 0000011111001001  :  0010011010
                          0010 011 010    size=10
processing shift left r2 2
-1
['shift', 'left', 'r2', '2']
... @2003 0000011111010011  :  100000100000010
                          1000 0 010 0000010   size=15
processing sub2 r3 r2
-1
['sub2', 'r3', 'r2']
... @2018 0000011111100010  :  0010011010
                          0010 011 010    size=10
processing shift left r1 4
-1
['shift', 'left', 'r1', '4']
... @2028 0000011111101100  :  100000010000100
                          1000 0 001 0000100   size=15
processing add2 r3 r1
-1
['add2', 'r3', 'r1']
... @2043 0000011111111011  :  0000011001
                          0000 011 001    size=10
processing setctr a0 r3
-1
['setctr', 'a0', 'r3']
... @2053 0000100000000101  :  11011010011
                          110110 10 011    size=11
processing write a0 16 r0
-1
['write', 'a0', '16', 'r0']
... @2064 0000100000010000  :  11010010101000
                          110100 10 101 000    size=14
processing return
-1
['return']
... @2078 0000100000011110  :  1110001
                          1110001    size=7
processing pop 64 r3
-1
['pop', '64', 'r3']
... @2085 0000100000100101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @2098 0000100000110010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @2111 0000100000111111  :  1001101111001
                          10011 01 111 001    size=13
processing plotend:
-1
['plotend:']
Average instruction size is 10.567164179104477
