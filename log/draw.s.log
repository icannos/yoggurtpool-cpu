
 PASS 1
processing 
-1
[]
processing jump drawend
-1
['jump', 'drawend']
... @0 0000000000000000  :  1010100000000000000000
                          1010 10 0000000000000000   size=22
processing draw:
-1
['draw:']
processing 
-1
[]
processing     push 64 r0
-1
['push', '64', 'r0']
... @22 0000000000010110  :  1110000111000
                          1110000 111 000    size=13
processing     push 64 r1
-1
['push', '64', 'r1']
... @35 0000000000100011  :  1110000111001
                          1110000 111 001    size=13
processing     push 64 r2
-1
['push', '64', 'r2']
... @48 0000000000110000  :  1110000111010
                          1110000 111 010    size=13
processing     push 64 r3
-1
['push', '64', 'r3']
... @61 0000000000111101  :  1110000111011
                          1110000 111 011    size=13
processing     push 64 r4
-1
['push', '64', 'r4']
... @74 0000000001001010  :  1110000111100
                          1110000 111 100    size=13
processing     push 64 r5
-1
['push', '64', 'r5']
... @87 0000000001010111  :  1110000111101
                          1110000 111 101    size=13
processing     push 64 r6
-1
['push', '64', 'r6']
... @100 0000000001100100  :  1110000111110
                          1110000 111 110    size=13
processing 
-1
[]
processing ;mettons les points dans le bon sens
0
hey
[]
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @113 0000000001110001  :  0100001011
                          0100 001 011    size=10
processing jumpif lt echange
-1
['jumpif', 'lt', 'echange']
... @123 0000000001111011  :  1011110100000000000000000
                          1011 110 10 0000000000000000   size=25
processing let r5 r1
-1
['let', 'r5', 'r1']
... @148 0000000010010100  :  0110101001
                          0110 101 001    size=10
processing let r1 r3
-1
['let', 'r1', 'r3']
... @158 0000000010011110  :  0110001011
                          0110 001 011    size=10
processing let r3 r5
-1
['let', 'r3', 'r5']
... @168 0000000010101000  :  0110011101
                          0110 011 101    size=10
processing let r5 r2
-1
['let', 'r5', 'r2']
... @178 0000000010110010  :  0110101010
                          0110 101 010    size=10
processing let r2 r4
-1
['let', 'r2', 'r4']
... @188 0000000010111100  :  0110010100
                          0110 010 100    size=10
processing let r4 r5
-1
['let', 'r4', 'r5']
... @198 0000000011000110  :  0110100101
                          0110 100 101    size=10
processing echange:
-1
['echange:']
processing 
-1
[]
processing ;ceci prepare le premier point
0
hey
[]
processing sub3 r5 r3 r1 
-1
['sub3', 'r5', 'r3', 'r1']
... @208 0000000011010000  :  1110100101011001
                          1110100 101 011 001    size=16
processing shift left r5 1 ;r5 contient dx
16
hey
['shift', 'left', 'r5', '1']
... @224 0000000011100000  :  100001011
                          1000 0 101 1   size=9
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @233 0000000011101001  :  1110100110100010
                          1110100 110 100 010    size=16
processing shift left r6 1 ;r6 contient dy
16
hey
['shift', 'left', 'r6', '1']
... @249 0000000011111001  :  100001101
                          1000 0 110 1   size=9
processing push 64 r1
-1
['push', '64', 'r1']
... @258 0000000100000010  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @271 0000000100001111  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @284 0000000100011100  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @297 0000000100101001  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @310 0000000100110110  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @334 0000000101001110  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @347 0000000101011011  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @360 0000000101101000  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @373 0000000101110101  :  1001101111001
                          10011 01 111 001    size=13
processing 
-1
[]
processing 
-1
[]
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @386 0000000110000010  :  010111000
                          0101 110 0 0   size=9
processing jumpif slt negatif
-1
['jumpif', 'slt', 'negatif']
... @395 0000000110001011  :  1011011100000000000000000
                          1011 011 10 0000000000000000   size=25
processing cmp r5 r6
-1
['cmp', 'r5', 'r6']
... @420 0000000110100100  :  0100101110
                          0100 101 110    size=10
processing jumpif slt grandepente
-1
['jumpif', 'slt', 'grandepente']
... @430 0000000110101110  :  1011011100000000000000000
                          1011 011 10 0000000000000000   size=25
processing 
-1
[]
processing 
-1
[]
processing ;on met les donnees dans les bons registres pour ce cas
0
hey
[]
processing let r4 r6
-1
['let', 'r4', 'r6']
... @455 0000000111000111  :  0110100110
                          0110 100 110    size=10
processing sub3 r6 r3 r1
-1
['sub3', 'r6', 'r3', 'r1']
... @465 0000000111010001  :  1110100110011001
                          1110100 110 011 001    size=16
processing 
-1
[]
processing boucle:
-1
['boucle:']
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @481 0000000111100001  :  0100001011
                          0100 001 011    size=10
processing jumpif ge fin
-1
['jumpif', 'ge', 'fin']
... @491 0000000111101011  :  1011101100000000000000000
                          1011 101 10 0000000000000000   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @516 0000001000000100  :  000100101
                          0001 001 0 1   size=9
processing sub2 r6 r4
-1
['sub2', 'r6', 'r4']
... @525 0000001000001101  :  0010110100
                          0010 110 100    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @535 0000001000010111  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixel
-1
['jumpif', 'sgt', 'chgmtpixel']
... @544 0000001000100000  :  1011010100000000000000000
                          1011 010 10 0000000000000000   size=25
processing add2i r2 1
-1
['add2i', 'r2', '1']
... @569 0000001000111001  :  000101001
                          0001 010 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @578 0000001001000010  :  0000110101
                          0000 110 101    size=10
processing chgmtpixel:
-1
['chgmtpixel:']
processing push 64 r1
-1
['push', '64', 'r1']
... @588 0000001001001100  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @601 0000001001011001  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @614 0000001001100110  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @627 0000001001110011  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @640 0000001010000000  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @664 0000001010011000  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @677 0000001010100101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @690 0000001010110010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @703 0000001010111111  :  1001101111001
                          10011 01 111 001    size=13
processing jump boucle
-1
['jump', 'boucle']
... @716 0000001011001100  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing fin:
-1
['fin:']
processing 
-1
[]
processing pop 64 r6
-1
['pop', '64', 'r6']
... @738 0000001011100010  :  1001101111110
                          10011 01 111 110    size=13
processing pop 64 r5
-1
['pop', '64', 'r5']
... @751 0000001011101111  :  1001101111101
                          10011 01 111 101    size=13
processing pop 64 r4
-1
['pop', '64', 'r4']
... @764 0000001011111100  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @777 0000001100001001  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @790 0000001100010110  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @803 0000001100100011  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @816 0000001100110000  :  1001101111000
                          10011 01 111 000    size=13
processing 
-1
[]
processing return
-1
['return']
... @829 0000001100111101  :  1110001
                          1110001    size=7
processing drawend:
-1
['drawend:']
processing 
-1
[]
processing grandepente:
-1
['grandepente:']
processing ;mettons les bons registres
0
hey
[]
processing let r3 r5
-1
['let', 'r3', 'r5']
... @836 0000001101000100  :  0110011101
                          0110 011 101    size=10
processing let r5 r6
-1
['let', 'r5', 'r6']
... @846 0000001101001110  :  0110101110
                          0110 101 110    size=10
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @856 0000001101011000  :  1110100110100010
                          1110100 110 100 010    size=16
processing 
-1
[]
processing 
-1
[]
processing bouclebis:
-1
['bouclebis:']
processing cmp r2 r4
-1
['cmp', 'r2', 'r4']
... @872 0000001101101000  :  0100010100
                          0100 010 100    size=10
processing jumpif ge finbis
-1
['jumpif', 'ge', 'finbis']
... @882 0000001101110010  :  1011101100000000000000000
                          1011 101 10 0000000000000000   size=25
processing add2i r2 1
-1
['add2i', 'r2', '1']
... @907 0000001110001011  :  000101001
                          0001 010 0 1   size=9
processing sub2 r6 r3
-1
['sub2', 'r6', 'r3']
... @916 0000001110010100  :  0010110011
                          0010 110 011    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @926 0000001110011110  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixelbis
-1
['jumpif', 'sgt', 'chgmtpixelbis']
... @935 0000001110100111  :  1011010100000000000000000
                          1011 010 10 0000000000000000   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @960 0000001111000000  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @969 0000001111001001  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelbis:
-1
['chgmtpixelbis:']
processing push 64 r1
-1
['push', '64', 'r1']
... @979 0000001111010011  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @992 0000001111100000  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1005 0000001111101101  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1018 0000001111111010  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1031 0000010000000111  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1055 0000010000011111  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1068 0000010000101100  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1081 0000010000111001  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1094 0000010001000110  :  1001101111001
                          10011 01 111 001    size=13
processing jump bouclebis
-1
['jump', 'bouclebis']
... @1107 0000010001010011  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finbis:
-1
['finbis:']
processing pop 64 r6
-1
['pop', '64', 'r6']
... @1129 0000010001101001  :  1001101111110
                          10011 01 111 110    size=13
processing pop 64 r5
-1
['pop', '64', 'r5']
... @1142 0000010001110110  :  1001101111101
                          10011 01 111 101    size=13
processing pop 64 r4
-1
['pop', '64', 'r4']
... @1155 0000010010000011  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1168 0000010010010000  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1181 0000010010011101  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1194 0000010010101010  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1207 0000010010110111  :  1001101111000
                          10011 01 111 000    size=13
processing 
-1
[]
processing return
-1
['return']
... @1220 0000010011000100  :  1110001
                          1110001    size=7
processing 
-1
[]
processing 
-1
[]
processing negatif:
-1
['negatif:']
processing push 64 r0
-1
['push', '64', 'r0']
... @1227 0000010011001011  :  1110000111000
                          1110000 111 000    size=13
processing leti r0 0
-1
['leti', 'r0', '0']
... @1240 0000010011011000  :  011100000
                          0111 000 0 0   size=9
processing sub2 r0 r6
-1
['sub2', 'r0', 'r6']
... @1249 0000010011100001  :  0010000110
                          0010 000 110    size=10
processing cmp r5 r0
-1
['cmp', 'r5', 'r0']
... @1259 0000010011101011  :  0100101000
                          0100 101 000    size=10
processing jumpif slt grandepentebis
-1
['jumpif', 'slt', 'grandepentebis']
... @1269 0000010011110101  :  1011011100000000000000000
                          1011 011 10 0000000000000000   size=25
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1294 0000010100001110  :  1001101111000
                          10011 01 111 000    size=13
processing ;dans le huitieme octant
0
hey
[]
processing let r4 r6
-1
['let', 'r4', 'r6']
... @1307 0000010100011011  :  0110100110
                          0110 100 110    size=10
processing sub3 r6 r3 r1
-1
['sub3', 'r6', 'r3', 'r1']
... @1317 0000010100100101  :  1110100110011001
                          1110100 110 011 001    size=16
processing 
-1
[]
processing boucleter:
-1
['boucleter:']
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @1333 0000010100110101  :  0100001011
                          0100 001 011    size=10
processing jumpif ge finter
-1
['jumpif', 'ge', 'finter']
... @1343 0000010100111111  :  1011101100000000000000000
                          1011 101 10 0000000000000000   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @1368 0000010101011000  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r4
-1
['add2', 'r6', 'r4']
... @1377 0000010101100001  :  0000110100
                          0000 110 100    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @1387 0000010101101011  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixelter
-1
['jumpif', 'sgt', 'chgmtpixelter']
... @1396 0000010101110100  :  1011010100000000000000000
                          1011 010 10 0000000000000000   size=25
processing sub2i r2 1
-1
['sub2i', 'r2', '1']
... @1421 0000010110001101  :  001101001
                          0011 010 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @1430 0000010110010110  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelter:
-1
['chgmtpixelter:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1440 0000010110100000  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1453 0000010110101101  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1466 0000010110111010  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1479 0000010111000111  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1492 0000010111010100  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1516 0000010111101100  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1529 0000010111111001  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1542 0000011000000110  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1555 0000011000010011  :  1001101111001
                          10011 01 111 001    size=13
processing jump boucleter
-1
['jump', 'boucleter']
... @1568 0000011000100000  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finter:
-1
['finter:']
processing pop 64 r6
-1
['pop', '64', 'r6']
... @1590 0000011000110110  :  1001101111110
                          10011 01 111 110    size=13
processing pop 64 r5
-1
['pop', '64', 'r5']
... @1603 0000011001000011  :  1001101111101
                          10011 01 111 101    size=13
processing pop 64 r4
-1
['pop', '64', 'r4']
... @1616 0000011001010000  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1629 0000011001011101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1642 0000011001101010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1655 0000011001110111  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1668 0000011010000100  :  1001101111000
                          10011 01 111 000    size=13
processing 
-1
[]
processing return
-1
['return']
... @1681 0000011010010001  :  1110001
                          1110001    size=7
processing 
-1
[]
processing 
-1
[]
processing 
-1
[]
processing grandepentebis:
-1
['grandepentebis:']
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1688 0000011010011000  :  1001101111000
                          10011 01 111 000    size=13
processing ;dans le septieme octant
0
hey
[]
processing let r3 r5
-1
['let', 'r3', 'r5']
... @1701 0000011010100101  :  0110011101
                          0110 011 101    size=10
processing let r5 r6
-1
['let', 'r5', 'r6']
... @1711 0000011010101111  :  0110101110
                          0110 101 110    size=10
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @1721 0000011010111001  :  1110100110100010
                          1110100 110 100 010    size=16
processing bouclequater:
-1
['bouclequater:']
processing cmp r4 r2
-1
['cmp', 'r4', 'r2']
... @1737 0000011011001001  :  0100100010
                          0100 100 010    size=10
processing jumpif ge finquater
-1
['jumpif', 'ge', 'finquater']
... @1747 0000011011010011  :  1011101100000000000000000
                          1011 101 10 0000000000000000   size=25
processing sub2i r2 1
-1
['sub2i', 'r2', '1']
... @1772 0000011011101100  :  001101001
                          0011 010 0 1   size=9
processing add2 r6 r3
-1
['add2', 'r6', 'r3']
... @1781 0000011011110101  :  0000110011
                          0000 110 011    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @1791 0000011011111111  :  010111000
                          0101 110 0 0   size=9
processing jumpif slt chgmtpixelquater
-1
['jumpif', 'slt', 'chgmtpixelquater']
... @1800 0000011100001000  :  1011011100000000000000000
                          1011 011 10 0000000000000000   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @1825 0000011100100001  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @1834 0000011100101010  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelquater:
-1
['chgmtpixelquater:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1844 0000011100110100  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1857 0000011101000001  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1870 0000011101001110  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1883 0000011101011011  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1896 0000011101101000  :  110101100000000000000000
                          110101 10 0000000000000000   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1920 0000011110000000  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1933 0000011110001101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1946 0000011110011010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1959 0000011110100111  :  1001101111001
                          10011 01 111 001    size=13
processing jump bouclequater
-1
['jump', 'bouclequater']
... @1972 0000011110110100  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finquater:
-1
['finquater:']
processing pop 64 r6
-1
['pop', '64', 'r6']
... @1994 0000011111001010  :  1001101111110
                          10011 01 111 110    size=13
processing pop 64 r5
-1
['pop', '64', 'r5']
... @2007 0000011111010111  :  1001101111101
                          10011 01 111 101    size=13
processing pop 64 r4
-1
['pop', '64', 'r4']
... @2020 0000011111100100  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @2033 0000011111110001  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @2046 0000011111111110  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @2059 0000100000001011  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @2072 0000100000011000  :  1001101111000
                          10011 01 111 000    size=13
processing 
-1
[]
processing return
-1
['return']
... @2085 0000100000100101  :  1110001
                          1110001    size=7
processing 
-1
[]
processing jump plotend
-1
['jump', 'plotend']
... @2092 0000100000101100  :  1010100000000000000000
                          1010 10 0000000000000000   size=22
processing plot:
-1
['plot:']
processing leti r3 1073350080
-1
['leti', 'r3', '1073350080']
... @2114 0000100001000010  :  011101111000111111111110100000010111000000
                          0111 011 110 00111111111110100000010111000000   size=42
processing sub2i r2 127
-1
['sub2i', 'r2', '127']
... @2156 0000100001101100  :  00110101001111111
                          0011 010 10 01111111   size=17
processing shift left r2 9
-1
['shift', 'left', 'r2', '9']
... @2173 0000100001111101  :  100000100001001
                          1000 0 010 0001001   size=15
processing sub2 r3 r2
-1
['sub2', 'r3', 'r2']
... @2188 0000100010001100  :  0010011010
                          0010 011 010    size=10
processing shift left r2 2
-1
['shift', 'left', 'r2', '2']
... @2198 0000100010010110  :  100000100000010
                          1000 0 010 0000010   size=15
processing sub2 r3 r2
-1
['sub2', 'r3', 'r2']
... @2213 0000100010100101  :  0010011010
                          0010 011 010    size=10
processing shift left r1 4
-1
['shift', 'left', 'r1', '4']
... @2223 0000100010101111  :  100000010000100
                          1000 0 001 0000100   size=15
processing add2 r3 r1
-1
['add2', 'r3', 'r1']
... @2238 0000100010111110  :  0000011001
                          0000 011 001    size=10
processing setctr a0 r3
-1
['setctr', 'a0', 'r3']
... @2248 0000100011001000  :  11011010011
                          110110 10 011    size=11
processing write a0 16 r0
-1
['write', 'a0', '16', 'r0']
... @2259 0000100011010011  :  11010010101000
                          110100 10 101 000    size=14
processing return
-1
['return']
... @2273 0000100011100001  :  1110001
                          1110001    size=7
processing plotend:
-1
['plotend:']
processing 
-1
[]
processing 
-1
[]

 PASS 2
processing 
-1
[]
processing jump drawend
-1
['jump', 'drawend']
... @0 0000000000000000  :  1010100000001100101110
                          1010 10 0000001100101110   size=22
processing draw:
-1
['draw:']
processing 
-1
[]
processing     push 64 r0
-1
['push', '64', 'r0']
... @22 0000000000010110  :  1110000111000
                          1110000 111 000    size=13
processing     push 64 r1
-1
['push', '64', 'r1']
... @35 0000000000100011  :  1110000111001
                          1110000 111 001    size=13
processing     push 64 r2
-1
['push', '64', 'r2']
... @48 0000000000110000  :  1110000111010
                          1110000 111 010    size=13
processing     push 64 r3
-1
['push', '64', 'r3']
... @61 0000000000111101  :  1110000111011
                          1110000 111 011    size=13
processing     push 64 r4
-1
['push', '64', 'r4']
... @74 0000000001001010  :  1110000111100
                          1110000 111 100    size=13
processing     push 64 r5
-1
['push', '64', 'r5']
... @87 0000000001010111  :  1110000111101
                          1110000 111 101    size=13
processing     push 64 r6
-1
['push', '64', 'r6']
... @100 0000000001100100  :  1110000111110
                          1110000 111 110    size=13
processing 
-1
[]
processing ;mettons les points dans le bon sens
0
hey
[]
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @113 0000000001110001  :  0100001011
                          0100 001 011    size=10
processing jumpif lt echange
-1
['jumpif', 'lt', 'echange']
... @123 0000000001111011  :  1011110100000000000111100
                          1011 110 10 0000000000111100   size=25
processing let r5 r1
-1
['let', 'r5', 'r1']
... @148 0000000010010100  :  0110101001
                          0110 101 001    size=10
processing let r1 r3
-1
['let', 'r1', 'r3']
... @158 0000000010011110  :  0110001011
                          0110 001 011    size=10
processing let r3 r5
-1
['let', 'r3', 'r5']
... @168 0000000010101000  :  0110011101
                          0110 011 101    size=10
processing let r5 r2
-1
['let', 'r5', 'r2']
... @178 0000000010110010  :  0110101010
                          0110 101 010    size=10
processing let r2 r4
-1
['let', 'r2', 'r4']
... @188 0000000010111100  :  0110010100
                          0110 010 100    size=10
processing let r4 r5
-1
['let', 'r4', 'r5']
... @198 0000000011000110  :  0110100101
                          0110 100 101    size=10
processing echange:
-1
['echange:']
processing 
-1
[]
processing ;ceci prepare le premier point
0
hey
[]
processing sub3 r5 r3 r1 
-1
['sub3', 'r5', 'r3', 'r1']
... @208 0000000011010000  :  1110100101011001
                          1110100 101 011 001    size=16
processing shift left r5 1 ;r5 contient dx
16
hey
['shift', 'left', 'r5', '1']
... @224 0000000011100000  :  100001011
                          1000 0 101 1   size=9
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @233 0000000011101001  :  1110100110100010
                          1110100 110 100 010    size=16
processing shift left r6 1 ;r6 contient dy
16
hey
['shift', 'left', 'r6', '1']
... @249 0000000011111001  :  100001101
                          1000 0 110 1   size=9
processing push 64 r1
-1
['push', '64', 'r1']
... @258 0000000100000010  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @271 0000000100001111  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @284 0000000100011100  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @297 0000000100101001  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @310 0000000100110110  :  110101100000100001000010
                          110101 10 0000100001000010   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @334 0000000101001110  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @347 0000000101011011  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @360 0000000101101000  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @373 0000000101110101  :  1001101111001
                          10011 01 111 001    size=13
processing 
-1
[]
processing 
-1
[]
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @386 0000000110000010  :  010111000
                          0101 110 0 0   size=9
processing jumpif slt negatif
-1
['jumpif', 'slt', 'negatif']
... @395 0000000110001011  :  1011011100000001100100111
                          1011 011 10 0000001100100111   size=25
processing cmp r5 r6
-1
['cmp', 'r5', 'r6']
... @420 0000000110100100  :  0100101110
                          0100 101 110    size=10
processing jumpif slt grandepente
-1
['jumpif', 'slt', 'grandepente']
... @430 0000000110101110  :  1011011100000000101111101
                          1011 011 10 0000000101111101   size=25
processing 
-1
[]
processing 
-1
[]
processing ;on met les donnees dans les bons registres pour ce cas
0
hey
[]
processing let r4 r6
-1
['let', 'r4', 'r6']
... @455 0000000111000111  :  0110100110
                          0110 100 110    size=10
processing sub3 r6 r3 r1
-1
['sub3', 'r6', 'r3', 'r1']
... @465 0000000111010001  :  1110100110011001
                          1110100 110 011 001    size=16
processing 
-1
[]
processing boucle:
-1
['boucle:']
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @481 0000000111100001  :  0100001011
                          0100 001 011    size=10
processing jumpif ge fin
-1
['jumpif', 'ge', 'fin']
... @491 0000000111101011  :  1011101100000000011011110
                          1011 101 10 0000000011011110   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @516 0000001000000100  :  000100101
                          0001 001 0 1   size=9
processing sub2 r6 r4
-1
['sub2', 'r6', 'r4']
... @525 0000001000001101  :  0010110100
                          0010 110 100    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @535 0000001000010111  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixel
-1
['jumpif', 'sgt', 'chgmtpixel']
... @544 0000001000100000  :  1011010100000000000010011
                          1011 010 10 0000000000010011   size=25
processing add2i r2 1
-1
['add2i', 'r2', '1']
... @569 0000001000111001  :  000101001
                          0001 010 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @578 0000001001000010  :  0000110101
                          0000 110 101    size=10
processing chgmtpixel:
-1
['chgmtpixel:']
processing push 64 r1
-1
['push', '64', 'r1']
... @588 0000001001001100  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @601 0000001001011001  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @614 0000001001100110  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @627 0000001001110011  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @640 0000001010000000  :  110101100000100001000010
                          110101 10 0000100001000010   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @664 0000001010011000  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @677 0000001010100101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @690 0000001010110010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @703 0000001010111111  :  1001101111001
                          10011 01 111 001    size=13
processing jump boucle
-1
['jump', 'boucle']
... @716 0000001011001100  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing fin:
-1
['fin:']
processing 
-1
[]
processing pop 64 r6
-1
['pop', '64', 'r6']
... @738 0000001011100010  :  1001101111110
                          10011 01 111 110    size=13
processing pop 64 r5
-1
['pop', '64', 'r5']
... @751 0000001011101111  :  1001101111101
                          10011 01 111 101    size=13
processing pop 64 r4
-1
['pop', '64', 'r4']
... @764 0000001011111100  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @777 0000001100001001  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @790 0000001100010110  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @803 0000001100100011  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @816 0000001100110000  :  1001101111000
                          10011 01 111 000    size=13
processing 
-1
[]
processing return
-1
['return']
... @829 0000001100111101  :  1110001
                          1110001    size=7
processing drawend:
-1
['drawend:']
processing 
-1
[]
processing grandepente:
-1
['grandepente:']
processing ;mettons les bons registres
0
hey
[]
processing let r3 r5
-1
['let', 'r3', 'r5']
... @836 0000001101000100  :  0110011101
                          0110 011 101    size=10
processing let r5 r6
-1
['let', 'r5', 'r6']
... @846 0000001101001110  :  0110101110
                          0110 101 110    size=10
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @856 0000001101011000  :  1110100110100010
                          1110100 110 100 010    size=16
processing 
-1
[]
processing 
-1
[]
processing bouclebis:
-1
['bouclebis:']
processing cmp r2 r4
-1
['cmp', 'r2', 'r4']
... @872 0000001101101000  :  0100010100
                          0100 010 100    size=10
processing jumpif ge finbis
-1
['jumpif', 'ge', 'finbis']
... @882 0000001101110010  :  1011101100000000011011110
                          1011 101 10 0000000011011110   size=25
processing add2i r2 1
-1
['add2i', 'r2', '1']
... @907 0000001110001011  :  000101001
                          0001 010 0 1   size=9
processing sub2 r6 r3
-1
['sub2', 'r6', 'r3']
... @916 0000001110010100  :  0010110011
                          0010 110 011    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @926 0000001110011110  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixelbis
-1
['jumpif', 'sgt', 'chgmtpixelbis']
... @935 0000001110100111  :  1011010100000000000010011
                          1011 010 10 0000000000010011   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @960 0000001111000000  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @969 0000001111001001  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelbis:
-1
['chgmtpixelbis:']
processing push 64 r1
-1
['push', '64', 'r1']
... @979 0000001111010011  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @992 0000001111100000  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1005 0000001111101101  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1018 0000001111111010  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1031 0000010000000111  :  110101100000100001000010
                          110101 10 0000100001000010   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1055 0000010000011111  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1068 0000010000101100  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1081 0000010000111001  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1094 0000010001000110  :  1001101111001
                          10011 01 111 001    size=13
processing jump bouclebis
-1
['jump', 'bouclebis']
... @1107 0000010001010011  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finbis:
-1
['finbis:']
processing pop 64 r6
-1
['pop', '64', 'r6']
... @1129 0000010001101001  :  1001101111110
                          10011 01 111 110    size=13
processing pop 64 r5
-1
['pop', '64', 'r5']
... @1142 0000010001110110  :  1001101111101
                          10011 01 111 101    size=13
processing pop 64 r4
-1
['pop', '64', 'r4']
... @1155 0000010010000011  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1168 0000010010010000  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1181 0000010010011101  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1194 0000010010101010  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1207 0000010010110111  :  1001101111000
                          10011 01 111 000    size=13
processing 
-1
[]
processing return
-1
['return']
... @1220 0000010011000100  :  1110001
                          1110001    size=7
processing 
-1
[]
processing 
-1
[]
processing negatif:
-1
['negatif:']
processing push 64 r0
-1
['push', '64', 'r0']
... @1227 0000010011001011  :  1110000111000
                          1110000 111 000    size=13
processing leti r0 0
-1
['leti', 'r0', '0']
... @1240 0000010011011000  :  011100000
                          0111 000 0 0   size=9
processing sub2 r0 r6
-1
['sub2', 'r0', 'r6']
... @1249 0000010011100001  :  0010000110
                          0010 000 110    size=10
processing cmp r5 r0
-1
['cmp', 'r5', 'r0']
... @1259 0000010011101011  :  0100101000
                          0100 101 000    size=10
processing jumpif slt grandepentebis
-1
['jumpif', 'slt', 'grandepentebis']
... @1269 0000010011110101  :  1011011100000000110001010
                          1011 011 10 0000000110001010   size=25
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1294 0000010100001110  :  1001101111000
                          10011 01 111 000    size=13
processing ;dans le huitieme octant
0
hey
[]
processing let r4 r6
-1
['let', 'r4', 'r6']
... @1307 0000010100011011  :  0110100110
                          0110 100 110    size=10
processing sub3 r6 r3 r1
-1
['sub3', 'r6', 'r3', 'r1']
... @1317 0000010100100101  :  1110100110011001
                          1110100 110 011 001    size=16
processing 
-1
[]
processing boucleter:
-1
['boucleter:']
processing cmp r1 r3
-1
['cmp', 'r1', 'r3']
... @1333 0000010100110101  :  0100001011
                          0100 001 011    size=10
processing jumpif ge finter
-1
['jumpif', 'ge', 'finter']
... @1343 0000010100111111  :  1011101100000000011011110
                          1011 101 10 0000000011011110   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @1368 0000010101011000  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r4
-1
['add2', 'r6', 'r4']
... @1377 0000010101100001  :  0000110100
                          0000 110 100    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @1387 0000010101101011  :  010111000
                          0101 110 0 0   size=9
processing jumpif sgt chgmtpixelter
-1
['jumpif', 'sgt', 'chgmtpixelter']
... @1396 0000010101110100  :  1011010100000000000010011
                          1011 010 10 0000000000010011   size=25
processing sub2i r2 1
-1
['sub2i', 'r2', '1']
... @1421 0000010110001101  :  001101001
                          0011 010 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @1430 0000010110010110  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelter:
-1
['chgmtpixelter:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1440 0000010110100000  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1453 0000010110101101  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1466 0000010110111010  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1479 0000010111000111  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1492 0000010111010100  :  110101100000100001000010
                          110101 10 0000100001000010   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1516 0000010111101100  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1529 0000010111111001  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1542 0000011000000110  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1555 0000011000010011  :  1001101111001
                          10011 01 111 001    size=13
processing jump boucleter
-1
['jump', 'boucleter']
... @1568 0000011000100000  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finter:
-1
['finter:']
processing pop 64 r6
-1
['pop', '64', 'r6']
... @1590 0000011000110110  :  1001101111110
                          10011 01 111 110    size=13
processing pop 64 r5
-1
['pop', '64', 'r5']
... @1603 0000011001000011  :  1001101111101
                          10011 01 111 101    size=13
processing pop 64 r4
-1
['pop', '64', 'r4']
... @1616 0000011001010000  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1629 0000011001011101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1642 0000011001101010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1655 0000011001110111  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1668 0000011010000100  :  1001101111000
                          10011 01 111 000    size=13
processing 
-1
[]
processing return
-1
['return']
... @1681 0000011010010001  :  1110001
                          1110001    size=7
processing 
-1
[]
processing 
-1
[]
processing 
-1
[]
processing grandepentebis:
-1
['grandepentebis:']
processing pop 64 r0
-1
['pop', '64', 'r0']
... @1688 0000011010011000  :  1001101111000
                          10011 01 111 000    size=13
processing ;dans le septieme octant
0
hey
[]
processing let r3 r5
-1
['let', 'r3', 'r5']
... @1701 0000011010100101  :  0110011101
                          0110 011 101    size=10
processing let r5 r6
-1
['let', 'r5', 'r6']
... @1711 0000011010101111  :  0110101110
                          0110 101 110    size=10
processing sub3 r6 r4 r2
-1
['sub3', 'r6', 'r4', 'r2']
... @1721 0000011010111001  :  1110100110100010
                          1110100 110 100 010    size=16
processing bouclequater:
-1
['bouclequater:']
processing cmp r4 r2
-1
['cmp', 'r4', 'r2']
... @1737 0000011011001001  :  0100100010
                          0100 100 010    size=10
processing jumpif ge finquater
-1
['jumpif', 'ge', 'finquater']
... @1747 0000011011010011  :  1011101100000000011011110
                          1011 101 10 0000000011011110   size=25
processing sub2i r2 1
-1
['sub2i', 'r2', '1']
... @1772 0000011011101100  :  001101001
                          0011 010 0 1   size=9
processing add2 r6 r3
-1
['add2', 'r6', 'r3']
... @1781 0000011011110101  :  0000110011
                          0000 110 011    size=10
processing cmpi r6 0
-1
['cmpi', 'r6', '0']
... @1791 0000011011111111  :  010111000
                          0101 110 0 0   size=9
processing jumpif slt chgmtpixelquater
-1
['jumpif', 'slt', 'chgmtpixelquater']
... @1800 0000011100001000  :  1011011100000000000010011
                          1011 011 10 0000000000010011   size=25
processing add2i r1 1
-1
['add2i', 'r1', '1']
... @1825 0000011100100001  :  000100101
                          0001 001 0 1   size=9
processing add2 r6 r5
-1
['add2', 'r6', 'r5']
... @1834 0000011100101010  :  0000110101
                          0000 110 101    size=10
processing chgmtpixelquater:
-1
['chgmtpixelquater:']
processing push 64 r1
-1
['push', '64', 'r1']
... @1844 0000011100110100  :  1110000111001
                          1110000 111 001    size=13
processing push 64 r2
-1
['push', '64', 'r2']
... @1857 0000011101000001  :  1110000111010
                          1110000 111 010    size=13
processing push 64 r3
-1
['push', '64', 'r3']
... @1870 0000011101001110  :  1110000111011
                          1110000 111 011    size=13
processing push 64 r7
-1
['push', '64', 'r7']
... @1883 0000011101011011  :  1110000111111
                          1110000 111 111    size=13
processing call plot
-1
['call', 'plot']
... @1896 0000011101101000  :  110101100000100001000010
                          110101 10 0000100001000010   size=24
processing pop 64 r7
-1
['pop', '64', 'r7']
... @1920 0000011110000000  :  1001101111111
                          10011 01 111 111    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @1933 0000011110001101  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @1946 0000011110011010  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @1959 0000011110100111  :  1001101111001
                          10011 01 111 001    size=13
processing jump bouclequater
-1
['jump', 'bouclequater']
... @1972 0000011110110100  :  1010101111111011111111
                          1010 10 1111111011111111   size=22
processing finquater:
-1
['finquater:']
processing pop 64 r6
-1
['pop', '64', 'r6']
... @1994 0000011111001010  :  1001101111110
                          10011 01 111 110    size=13
processing pop 64 r5
-1
['pop', '64', 'r5']
... @2007 0000011111010111  :  1001101111101
                          10011 01 111 101    size=13
processing pop 64 r4
-1
['pop', '64', 'r4']
... @2020 0000011111100100  :  1001101111100
                          10011 01 111 100    size=13
processing pop 64 r3
-1
['pop', '64', 'r3']
... @2033 0000011111110001  :  1001101111011
                          10011 01 111 011    size=13
processing pop 64 r2
-1
['pop', '64', 'r2']
... @2046 0000011111111110  :  1001101111010
                          10011 01 111 010    size=13
processing pop 64 r1
-1
['pop', '64', 'r1']
... @2059 0000100000001011  :  1001101111001
                          10011 01 111 001    size=13
processing pop 64 r0
-1
['pop', '64', 'r0']
... @2072 0000100000011000  :  1001101111000
                          10011 01 111 000    size=13
processing 
-1
[]
processing return
-1
['return']
... @2085 0000100000100101  :  1110001
                          1110001    size=7
processing 
-1
[]
processing jump plotend
-1
['jump', 'plotend']
... @2092 0000100000101100  :  1010100000000010100110
                          1010 10 0000000010100110   size=22
processing plot:
-1
['plot:']
processing leti r3 1073350080
-1
['leti', 'r3', '1073350080']
... @2114 0000100001000010  :  011101111000111111111110100000010111000000
                          0111 011 110 00111111111110100000010111000000   size=42
processing sub2i r2 127
-1
['sub2i', 'r2', '127']
... @2156 0000100001101100  :  00110101001111111
                          0011 010 10 01111111   size=17
processing shift left r2 9
-1
['shift', 'left', 'r2', '9']
... @2173 0000100001111101  :  100000100001001
                          1000 0 010 0001001   size=15
processing sub2 r3 r2
-1
['sub2', 'r3', 'r2']
... @2188 0000100010001100  :  0010011010
                          0010 011 010    size=10
processing shift left r2 2
-1
['shift', 'left', 'r2', '2']
... @2198 0000100010010110  :  100000100000010
                          1000 0 010 0000010   size=15
processing sub2 r3 r2
-1
['sub2', 'r3', 'r2']
... @2213 0000100010100101  :  0010011010
                          0010 011 010    size=10
processing shift left r1 4
-1
['shift', 'left', 'r1', '4']
... @2223 0000100010101111  :  100000010000100
                          1000 0 001 0000100   size=15
processing add2 r3 r1
-1
['add2', 'r3', 'r1']
... @2238 0000100010111110  :  0000011001
                          0000 011 001    size=10
processing setctr a0 r3
-1
['setctr', 'a0', 'r3']
... @2248 0000100011001000  :  11011010011
                          110110 10 011    size=11
processing write a0 16 r0
-1
['write', 'a0', '16', 'r0']
... @2259 0000100011010011  :  11010010101000
                          110100 10 101 000    size=14
processing return
-1
['return']
... @2273 0000100011100001  :  1110001
                          1110001    size=7
processing plotend:
-1
['plotend:']
processing 
-1
[]
processing 
-1
[]
Average instruction size is 10.4587155963
